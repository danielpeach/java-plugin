plugins {
  id "org.jetbrains.kotlin.jvm" version "$kotlinVersion" apply false
  id "com.google.protobuf" version "0.8.15" apply false
  id "com.diffplug.spotless" version "5.12.4" apply false
  id "org.jetbrains.dokka" version "1.4.32" apply false
}

allprojects {
  group = "io.github.java-plugin"
  version = "0.0.1-SNAPSHOT"
}

subprojects {
  apply plugin: "java"
  apply plugin: "kotlin"
  apply plugin: "com.google.protobuf"
  apply plugin: "com.diffplug.spotless"

  repositories {
    mavenCentral()
    jcenter()
  }

  sourceCompatibility = JavaVersion.VERSION_11
  targetCompatibility = JavaVersion.VERSION_11

  configurations.all {
    resolutionStrategy.eachDependency { details ->
      if (details.requested.group == "io.netty") {
        details.useVersion "4.1.59.Final"
      }
    }
  }

  dependencies {
    implementation 'javax.annotation:javax.annotation-api:1.3.2'
    implementation "io.grpc:grpc-kotlin-stub:$grpcKotlinVersion"
    implementation "io.grpc:grpc-protobuf:${grpcVersion}"
    implementation "io.grpc:grpc-stub:${grpcVersion}"
    implementation "io.grpc:grpc-netty:${grpcVersion}"
    implementation "com.google.protobuf:protobuf-java-util:${protobufVersion}"
    implementation "org.jetbrains.kotlin:kotlin-reflect"
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8:1.4.10"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-jdk8:1.4.3"
  }

  protobuf {
    protoc { artifact = "com.google.protobuf:protoc:${protocVersion}" }
    plugins {
      grpc { artifact = "io.grpc:protoc-gen-grpc-java:${grpcVersion}" }
      grpckt { artifact = "io.grpc:protoc-gen-grpc-kotlin:${grpcKotlinVersion}:jdk7@jar" }
    }
    generateProtoTasks {
      all()*.plugins {
        grpc {}
        grpckt {}
      }
    }
  }

  sourceSets {
    main {
      java {
        srcDirs 'build/generated/source/proto/main/grpc'
        srcDirs 'build/generated/source/proto/main/java'
      }
      kotlin {
        srcDirs 'build/generated/source/proto/main/grpckt'
      }
    }

    test {
      java {
        srcDirs 'build/generated/source/proto/test/grpc'
        srcDirs 'build/generated/source/proto/test/java'
      }
      kotlin {
        srcDirs 'build/generated/source/proto/test/grpckt'
      }
    }
  }

  tasks.withType(org.jetbrains.kotlin.gradle.tasks.KotlinCompile).configureEach {
    kotlinOptions {
      freeCompilerArgs += [
          "-Xjsr305=strict",
          "-Xuse-experimental=kotlinx.coroutines.ExperimentalCoroutinesApi",
          "-Xopt-in=kotlin.RequiresOptIn",
          "-Xopt-in=kotlin.time.ExperimentalTime"
      ]
      jvmTarget = "11"
    }
  }

  tasks.withType(Test) {
    useJUnitPlatform()
  }

  spotless {
    kotlin {
      ktlint("0.40.0").userData([
          disabled_rules          : "no-wildcard-imports",
          indent_size             : "2",
          continuation_indent_size: "2",
      ])
    }
  }
}

